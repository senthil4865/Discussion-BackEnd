{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/material-module.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/server-error/server-error.component.css","webpack:///./src/app/server-error/server-error.component.html","webpack:///./src/app/server-error/server-error.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/app/user/forgot-password/forgot-password.component.css","webpack:///./src/app/user/forgot-password/forgot-password.component.html","webpack:///./src/app/user/forgot-password/forgot-password.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/reset-password/reset-password.component.css","webpack:///./src/app/user/reset-password/reset-password.component.html","webpack:///./src/app/user/reset-password/reset-password.component.ts","webpack:///./src/app/user/signup/signup.component.css","webpack:///./src/app/user/signup/signup.component.html","webpack:///./src/app/user/signup/signup.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/verify-email/verify-email.component.css","webpack:///./src/app/user/verify-email/verify-email.component.html","webpack:///./src/app/user/verify-email/verify-email.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./discussion/discussion.module\": [\n\t\t\"./src/app/discussion/discussion.module.ts\",\n\t\t\"discussion-discussion-module\"\n\t],\n\t\"./user/user.module\": [\n\t\t\"./src/app/user/user.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { ServerErrorComponent } from \"./server-error/server-error.component\";\n\nconst routes: Routes = [\n  {\n    path: \"user\",\n    loadChildren: \"./user/user.module#UserModule\"\n  },\n\n  {\n    path: \"discussion\",\n    loadChildren: \"./discussion/discussion.module#DiscussionModule\"\n  },\n\n  { path: \"\", redirectTo: \"user/login\", pathMatch: \"full\" },\n  { path: \"serverError\", component: ServerErrorComponent },\n  { path: \"*\", component: PageNotFoundComponent },\n  { path: \"**\", component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"Discussion-FrontEnd\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { UserModule } from \"./user/user.module\";\nimport { MaterialModule } from \"./material-module\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { ServerErrorComponent } from \"./server-error/server-error.component\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { AppService } from \"./app.service\";\n\n@NgModule({\n  declarations: [AppComponent, PageNotFoundComponent, ServerErrorComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    UserModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    ToastrModule.forRoot({\n      timeOut: 7000,\n      positionClass: \"toast-top-right\",\n      preventDuplicates: true\n    })\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Cookie } from \"ng2-cookies/ng2-cookies\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AppService {\n  public baseUrl = \"http://localhost:3000/api/v1\";\n\n  public userFriends: any = [];\n\n  constructor(private _http: HttpClient) {\n   \n  }\n\n  public signUp(data): Observable<any> {\n    const params = new HttpParams()\n      .set(\"firstName\", data.firstName)\n      .set(\"lastName\", data.lastName)\n      .set(\"mobileNumber\", data.mobileNumber)\n      .set(\"email\", data.email)\n      .set(\"password\", data.password)\n      .set(\"countryName\", data.countryName)\n     \n    return this._http.post(`${this.baseUrl}/users/signup`, params);\n  } //end signUp\n\n  public signIn(data): Observable<any> {\n    const params = new HttpParams()\n      .set(\"email\", data.email)\n      .set(\"password\", data.password);\n\n    return this._http.post(`${this.baseUrl}/users/login`, params);\n  } //end signIn\n\n  public getCountryNames(): Observable<any> {\n    return this._http.get(\"./../assets/countryNames.json\");\n  } //end getCountryNames\n\n  public getCountryNumbers(): Observable<any> {\n    return this._http.get(\"./../assets/countryPhoneCodes.json\");\n  } //end getCountryNumbers\n\n  public setUserInfoInLocalStorage = data => {\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  }; //end of setlocalstorage Function\n\n  public getUserInfoFromLocalStorage = () => {\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\n  }; //end getlocalstorage function\n\n  public verifyEmail(userId): Observable<any> {\n    const params = new HttpParams().set(\"userId\", userId);\n\n    return this._http.put(`${this.baseUrl}/users/verifyEmail`, params);\n  } //end verifyEmail\n\n  public logout(userId, authToken): Observable<any> {\n    const params = new HttpParams().set(\"authToken\", authToken);\n\n    return this._http.post(`${this.baseUrl}/users/${userId}/logout`, params);\n  }\n\n  public addComment(data): Observable<any> {\n    const params = new HttpParams()\n       .set(\"id\", data.id)\n      .set(\"commentedBy\", data.commentedBy)\n      .set(\"comment\", data.comment)\n    return this._http.post(`${this.baseUrl}/discussion/addComment`, params);\n  }\n\n  public addDiscussion(data): Observable<any> {\n    const params = new HttpParams()\n      .set(\"ownerTopic\", data.ownerTopic)\n      .set(\"discussionName\", data.discussionName)\n      .set(\"discussionDescription\", data.discussionDescription)\n      .set(\"discussionCreatedBy\", data.discussionCreatedBy)\n      .set(\"discussionModifiedBy\", data.discussionModifiedBy)\n    return this._http.post(`${this.baseUrl}/discussion/addDiscussion`, params);\n  }\n\n\n\n\n\n  public addSubDiscussion(data): Observable<any> {\n    const params = new HttpParams()\n      .set(\"ownerDiscussion\", data.ownerDiscussion)\n      .set(\"subDiscussionName\", data.subDiscussionName)\n      .set(\"subDiscussionCreatedBy\", data.subdiscussionCreatedBy)\n      .set(\"subDiscussionModifiedBy\", data.subdiscussionModifiedBy);\n\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.ownerDiscussion}/addSubDiscussion`,\n      params\n    );\n  }\n\n  public getAllDiscussions(pageSize, pageIndex, id): any {\n    return this._http.get(\n      `${\n        this.baseUrl\n      }/discussion/${id}/getAllDiscussions?pageSize=${pageSize}&pageIndex=${pageIndex}&authToken=${Cookie.get(\n        \"authToken\"\n      )}`\n    );\n  }\n\n  public getAllUsers(authToken): any {\n    return this._http.get(\n      `${this.baseUrl}/users/view/all?authToken=${authToken}`\n    );\n  }\n  public getAllDiscussionsByTopicId(dataforSubDiscussionDelete): any {\n    return this._http.get(\n      `${this.baseUrl}/discussion/${\n        dataforSubDiscussionDelete.TopicId\n      }/getTopicById?authToken=${Cookie.get(\"authToken\")}`\n    );\n  }\n\n  public sendFriendRequest(friendRequest): any {\n    const params = new HttpParams()\n      .set(\"senderId\", friendRequest.senderId)\n      .set(\"senderName\", friendRequest.senderName)\n      .set(\"receiverId\", friendRequest.receiverId)\n      .set(\"receiverName\", friendRequest.receiverName)\n      .set(\"authToken\", friendRequest.authToken);\n    return this._http.post(\n      `${this.baseUrl}/friends/send/friend/request`,\n      params\n    );\n  }\n  \n  public rejectFriendRequest(data): Observable<any>{\n\n    const params = new HttpParams()\n      .set('senderId',data.senderId)\n      .set('senderName',data.senderName)\n      .set('receiverId',data.receiverId)\n      .set('receiverName',data.receiverName)\n      .set('authToken',data.authToken)\n    \n    return this._http.post(`${this.baseUrl}/friends/reject/friend/request`, params);\n  }\n\n  public getRequestsReceived(userId, authToken): any {\n    return this._http.get(\n      `${this.baseUrl}/friends/view/friend/request/received/${userId}?authToken=${authToken}`\n    );\n  }\n\n  public getRequestsSent(userId, authToken): any {\n    return this._http.get(\n      `${this.baseUrl}/friends/view/friend/request/sent/${userId}?authToken=${authToken}`\n    );\n  }\n\n  public cancelRequest(data): any {\n    const params = new HttpParams()\n      .set(\"senderId\", data.senderId)\n      .set(\"senderName\", data.senderName)\n      .set(\"receiverId\", data.receiverId)\n      .set(\"receiverName\", data.receiverName)\n      .set(\"authToken\", data.authToken);\n\n    return this._http.post(\n      `${this.baseUrl}/friends/cancel/friend/request`,\n      params\n    );\n  }\n\n  public acceptRequest(data): any {\n    const params = new HttpParams()\n      .set(\"senderId\", data.senderId)\n      .set(\"senderName\", data.senderName)\n      .set(\"receiverId\", data.receiverId)\n      .set(\"receiverName\", data.receiverName)\n      .set(\"authToken\", data.authToken);\n\n    return this._http.post(\n      `${this.baseUrl}/friends/accept/friend/request`,\n      params\n    );\n  }\n\n  public getUserDetails(userId, authToken): Observable<any> {\n    return this._http.get(\n      `${this.baseUrl}/users/${userId}/details?authToken=${authToken}`\n    );\n  }\n\n  public unFriendRequest(data): any {\n    const params = new HttpParams()\n      .set(\"senderId\", data.senderId)\n      .set(\"senderName\", data.senderName)\n      .set(\"receiverId\", data.receiverId)\n      .set(\"receiverName\", data.receiverName)\n      .set(\"authToken\", data.authToken);\n\n    return this._http.post(`${this.baseUrl}/friends/unfriend/user`, params);\n  }\n\n  public getAllFriendsTopic(userId): any {\n    return this._http.get(\n      `${this.baseUrl}/topics/${userId}?authToken=${Cookie.get(\"authToken\")}`\n    );\n  }\n\n  public changeCompleteState(checkedState, discussionId): any {\n    const params = new HttpParams()\n      .set(\"discussionId\", discussionId)\n      .set(\"checkedState\", checkedState);\n\n    return this._http.post(`${this.baseUrl}/discussion/changeCompleteState`, params);\n  }\n  //changeCompleteStateSubDiscussion\n\n  public changeCompleteStateSubDiscussion(checkedState, subDiscussionId): any {\n    const params = new HttpParams()\n      .set(\"subDiscussionId\", subDiscussionId)\n      .set(\"checkedState\", checkedState);\n    return this._http.post(\n      `${this.baseUrl}/discussion/changeCompleteStateSubDiscussion`,\n      params\n    );\n  }\n\n  public getUserNotification(id) {\n    return this._http.get(\n      `${this.baseUrl}/notification/${id}/notification?authToken=${Cookie.get(\n        \"authToken\"\n      )}`\n    );\n  }\n\n  public saveUserNotification(data): any {\n    const params = new HttpParams()\n      .set(\"senderName\", data.senderName)\n      .set(\"senderId\", data.senderId)\n      .set(\"receiverName\", data.receiverName)\n      .set(\"receiverId\", data.receiverId)\n      .set(\"redirectId\", data.redirectId)\n      .set(\"message\", data.message)\n      .set(\"authToken\", data.authToken);\n    return this._http.post(\n      `${this.baseUrl}/notification/saveNotification`,\n      params\n    );\n  }\n\n  public getDiscussionDetail(id): Observable<any> {\n    return this._http.get(\n      `${this.baseUrl}/discussion/${id}/discussionDetails?authToken=${Cookie.get(\n        \"authToken\"\n      )}`\n    );\n  }\n\n  public addTopic(topic): any {\n    console.log(topic,'client');\n    const params = new HttpParams()\n      .set(\"authToken\", topic.authToken)\n      .set(\"topicName\", topic.topicName)\n      .set(\"topicCreatedBy\", topic.topicCreatedBy)\n      .set(\"topicModifiedBy\", topic.topicModifiedBy);\n    return this._http.post(`${this.baseUrl}/topics/addTopic`, params);\n  }\n\n  public getAllTopic(): any {\n    return this._http.get(\n      `${this.baseUrl}/topics/getAll?authToken=${Cookie.get(\"authToken\")}`\n    );\n  }\n\n  public updateTopic(data): any {\n    const params = new HttpParams()\n      .set(\"authToken\", data.authToken)\n      .set(\"TopicName\", data.TopicName)\n      .set(\"TopicModifiedBy\", data.TopicModifiedBy);\n\n    return this._http.post(\n      `${this.baseUrl}/topics/${data.TopicId}/updateTopic`,\n      params\n    );\n  }\n\n  public updateDiscussion(data): any {\n    const params = new HttpParams()\n      .set(\"authToken\", data.authToken)\n      .set(\"DiscussionName\", data.DiscussionName)\n      .set(\"DiscussionModifiedBy\", data.DiscussionModifiedBy);\n\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.discussionId}/updateDiscussion`,\n      params\n    );\n  }\n\n  public updatesubDiscussion(data): any {\n    const params = new HttpParams()\n      .set(\"authToken\", data.authToken)\n      .set(\"subDiscussionName\", data.subDiscussionName)\n      .set(\"subDiscussionModifiedBy\", data.subDiscussionModifiedBy);\n\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.subDiscussionId}/updatesubDiscussion`,\n      params\n    );\n  }\n\n  public deleteTopic(data): any {\n    const params = new HttpParams().set(\"authToken\", data.authToken);\n    return this._http.post(\n      `${this.baseUrl}/topics/${data.TopicId}/deleteTopic`,\n      params\n    );\n  }\n\n  //For recursive delete of discussion and sub discussion\n  public deleteAllSubDiscussionsById(data): any {\n    const params = new HttpParams().set(\"authToken\", data.authToken);\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.id}/deleteSubDiscussion`,\n      params\n    );\n  }\n\n  public deleteAllDiscussionsById(data): any {\n    const params = new HttpParams().set(\"authToken\", data.authToken);\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.discussionId}/deleteDiscussion`,\n      params\n    );\n  }\n\n  //For deleting single sub discussion\n  public deletesubDiscussion(data): any {\n    const params = new HttpParams().set(\"authToken\", data.authToken);\n    return this._http.post(\n      `${this.baseUrl}/discussion/${data.subDiscussionId}/deletesubDiscussion`,\n      params\n    );\n  }\n\n  //For deleting Undo\n  public deleteUndo(data): any {\n    const params = new HttpParams()\n      .set(\"undoId\", data.undoId)\n      .set(\"authToken\", data.authToken);\n    return this._http.post(`${this.baseUrl}/undo/deleteUndo`, params);\n  }\n\n  public resetPassword(data): Observable<any> {\n    const params = new HttpParams().set(\"email\", data.email);\n\n    return this._http.post(`${this.baseUrl}/users/resetPassword`, params);\n  }\n\n  public updatePassword(data): Observable<any> {\n    const params = new HttpParams()\n      .set(\"validationToken\", data.validationToken)\n      .set(\"password\", data.password);\n\n    return this._http.put(`${this.baseUrl}/users/updatePassword`, params);\n  } //end updatePassword\n\n  public getUndo(data): any {\n    const params = new HttpParams()\n      .set(\"topicId\", data.topicId)\n      .set(\"authToken\", data.authToken);\n\n    return this._http.post(`${this.baseUrl}/undo/deleteUndo`, params);\n  }\n\n  public addUndoDetails(data): any {\n    const params = new HttpParams()\n      .set(\"topicId\", data.topicId)\n      .set(\"action\", data.action)\n      .set(\"discussionId\", data.discussionId)\n      .set(\"subDiscussionId\", data.subDiscussionId)\n      .set(\"authToken\", data.authToken);\n    return this._http.post(`${this.baseUrl}/undo/addUndo`, params);\n  }\n\n  public updateDiscussionTaskForUndo(data): any {\n    const params = new HttpParams()\n      .set(\"_id\", data._id)\n      .set(\"ownerTopic\", data.ownerTopic)\n      .set(\"discussionCreatedBy\", data.discussionCreatedBy)\n      .set(\"discussionModifiedBy\", data.discussionModifiedBy)\n      .set(\"completed\", data.completed)\n      .set(\"discussionModifiedDate\", data.discussionModifiedDate)\n      .set(\"discussionCreatedDate\", data.discussionCreatedDate)\n      .set(\"discussionDescription\", data.discussionDescription)\n      .set(\"discussionName\", data.discussionName)\n      .set(\"discussionId\", data.discussionId);\n    return this._http.post(`${this.baseUrl}/undo/updateDiscussionUndo`, params);\n  }\n\n  public updatesubDiscussionTaskForUndo(data): any {\n    const params = new HttpParams()\n      .set(\"_id\", data._id)\n      .set(\"ownerDiscussion\", data.ownerDiscussion)\n      .set(\"subDiscussionCreatedBy\", data.subDiscussionCreatedBy)\n      .set(\"subDiscussionModifiedBy\", data.subDiscussionModifiedBy)\n      .set(\"completed\", data.completed)\n      .set(\"subDiscussionModifiedDate\", data.subDiscussionModifiedDate)\n      .set(\"subDiscussionCreatedDate\", data.subDiscussionCreatedDate)\n      .set(\"subDiscussionDescription\", data.subDiscussionDescription)\n      .set(\"subDiscussionName\", data.subDiscussionName)\n      .set(\"subDiscussionId\", data.subDiscussionId);\n    return this._http.post(`${this.baseUrl}/undo/updatesubDiscussionUndo`, params);\n  }\n\n  public addDiscussionTaskForUndo(data): any {\n    const params = new HttpParams()\n      .set(\"_id\", data._id)\n      .set(\"ownerTopic\", data.ownerTopic)\n      .set(\"discussionCreatedBy\", data.discussionCreatedBy)\n      .set(\"discussionModifiedBy\", data.discussionModifiedBy)\n      .set(\"subdiscussion\", data.subdiscussion)\n      .set(\"completed\", data.completed)\n      .set(\"discussionModifiedDate\", data.discussionModifiedDate)\n      .set(\"discussionCreatedDate\", data.discussionCreatedDate)\n      .set(\"discussionDescription\", data.discussionDescription)\n      .set(\"discussionName\", data.discussionName)\n      .set(\"discussionId\", data.discussionId);\n    return this._http.post(`${this.baseUrl}/undo/addDiscussionUndo`, params);\n  }\n\n  public addsubDiscussionTaskForUndo(data): any {\n    const params = new HttpParams()\n      .set(\"_id\", data._id)\n      .set(\"ownerDiscussion\", data.ownerDiscussion)\n      .set(\"subDiscussionCreatedBy\", data.subDiscussionCreatedBy)\n      .set(\"subDiscussionModifiedBy\", data.subDiscussionModifiedBy)\n      .set(\"completed\", data.completed)\n      .set(\"subDiscussionModifiedDate\", data.subDiscussionModifiedDate)\n      .set(\"subDiscussionCreatedDate\", data.subDiscussionCreatedDate)\n      .set(\"subDiscussionDescription\", data.subDiscussionDescription)\n      .set(\"subDiscussionName\", data.subDiscussionName)\n      .set(\"subDiscussionId\", data.subDiscussionId);\n    return this._http.post(`${this.baseUrl}/undo/addsubDiscussionUndo`, params);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport {\n  MatButtonModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatBadgeModule,\n  MatSidenavModule,\n  MatListModule,\n  MatGridListModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatChipsModule,\n  MatTooltipModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatCardModule\n} from \"@angular/material\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCardModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCardModule\n  ],\n  providers: [MatDatepickerModule]\n})\nexport class MaterialModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div style=\\\"margin-top: 30vh;\\\" class=\\\"col-12 mx-auto\\\">\\n      <div class=\\\"card \\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <div class=\\\"text-center\\\">\\n            <div>\\n              <h5>\\n                The Page you are looking for does not exist.Please Go Back\\n              </h5>\\n            </div>\\n            <div>\\n              <h2><span style=\\\"color:red\\\">404 Error </span></h2>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer text-center\\\">\\n          <div class=\\\"col-md-12 control\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">\\n              Go Back\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n//Location services\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor(\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n  }\n  public goBack = (): any => {\n    this.location.back();\n  }\n\n}\n ","module.exports = \"\\n.icons{\\n    color:lightblue;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmVyLWVycm9yL3NlcnZlci1lcnJvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlci1lcnJvci9zZXJ2ZXItZXJyb3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmljb25ze1xuICAgIGNvbG9yOmxpZ2h0Ymx1ZTtcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div style=\\\"margin-top: 30vh;\\\" class=\\\"col-12 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <div class=\\\"text-center\\\">\\n            <div>\\n              <h3>Internal Server Error!</h3>\\n            </div>\\n            <div>\\n              <h1><span style=\\\"color:red\\\">500 Error </span></h1>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-footer text-center\\\">\\n          <div class=\\\"col-md-12 control\\\">\\n            <button\\n              type=\\\"button\\\"\\n              class=\\\"btn btn-success\\\"\\n              (click)=\\\"goToSignIn()\\\"\\n            >\\n              Redirect to Login\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-server-error\",\n  templateUrl: \"./server-error.component.html\",\n  styleUrls: [\"./server-error.component.css\"]\n})\nexport class ServerErrorComponent implements OnInit {\n  constructor(public router: Router) {}\n\n  public goToSignIn(): any {\n    this.router.navigate([\"/user/login\"]);\n  } //end of goToSign function\n\n  ngOnInit() {}\n}\n","// import { Injectable } from '@angular/core';\n\n// //Added for Http and Observables\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\nimport * as io from \"socket.io-client\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SocketService {\n  private uri: string = \"http://localhost:3000\";\n  public socket: any;\n\n  constructor() {\n    this.socket = io(this.uri,{forceNew:true});\n  }\n\n  topicen(eventName: string) {\n    return new Observable(Subscriber => {\n      this.socket.on(eventName, data => {\n        Subscriber.next(data);\n      });\n    });\n  }\n\n  emit(eventName: string, data: any) {\n    this.socket.emit(eventName, data);\n  }\n\n  public setUser = authToken => {\n    this.socket.emit(\"set-user\", authToken);\n  };\n\n  public sendNotify = objNotify => {\n    this.socket.emit(\"notify\", objNotify);\n  };\n\n  public notify = userId => {\n    return Observable.create(observer => {\n      this.socket.on(userId, data => {\n        observer.next(data);\n      });\n    });\n  };\n\n  //events that has to be topicen\n  public verifyUser = () => {\n    return Observable.create(observer => {\n      this.socket.on(\"verifyUser\", data => {\n        observer.next(data);\n      }); //On method\n    }); //end observable\n  }; //end verifyUser\n\n  public getUpdatesFromUser = userId => {\n    return Observable.create(observer => {\n      this.socket.on(userId, data => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n  }; // end getUpdatesFromUser\n\n  public disconnect = () => {\n    return Observable.create(observer => {\n      this.socket.on(\"disconnect\", () => {\n        observer.next();\n      }); //end On method\n    }); //end observable\n  };\n\n  public topicenAuthError = () => {\n    return Observable.create(observer => {\n      this.socket.on(\"auth-error\", data => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n  };\n\n  // disconnect socket\n  public exitSocket = () => {\n    this.socket.emit(\"disconnect\");\n\n    this.socket.disconnect();\n  }; // end exit socket\n\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = \"\";\n\n    if (err.error instanceof Error) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    } // end condition *if\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n  } // END handleError\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"login-wrapper\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"box\\\">\\n    <form\\n      id=\\\"forgotPasswordForm\\\"\\n      #forgotPasswordForm=\\\"ngForm\\\"\\n      class=\\\"example-form\\\"\\n    >\\n      <mat-card-content>\\n        <h4>Please enter email to send reset link</h4>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" required />\\n          <mat-error *ngIf=\\\"email.invalid\\\">{{ getErrorMessage() }}</mat-error>\\n        </mat-form-field>\\n      </mat-card-content>\\n      <button\\n        mat-stroked-button\\n        color=\\\"accent\\\"\\n        (click)=\\\"forgotPasswordFunction()\\\"\\n        [disabled]=\\\"!forgotPasswordForm.valid\\\"\\n        class=\\\"btn-block\\\"\\n      >\\n        Reset</button\\n      ><br />\\n    </form>\\n  </mat-card>\\n</div>\\n\"","import { Component, ViewChild, OnInit } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Route, Router } from \"@angular/router\";\nimport { AppService } from \"src/app/app.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.css\"]\n})\nexport class ForgotPasswordComponent implements OnInit {\n  email = new FormControl(\"\", [Validators.required, Validators.email]);\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit() {}\n\n  getErrorMessage() {\n    return this.email.hasError(\"required\")\n      ? \"You must enter a value\"\n      : this.email.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n\n  public forgotPasswordFunction(): any {\n    if (!this.email.value) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    } else if (this.email.hasError(\"email\")) {\n      this.toastr.warning(\"Not a valid email\", \"Warning!\");\n    } else {\n      let data = {\n        email: this.email.value\n      };\n      this.appService.resetPassword(data).subscribe(\n        apiResponse => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\n              \"Reset Password\",\n              \"Password reset instructions sent successfully\"\n            );\n          } else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n        error => {\n          if (error.status == 404) {\n            this.toastr.warning(\"Reset Password Failed\", \"Email Not Found!\");\n          } else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate([\"/serverError\"]);\n          }\n        }\n      ); //end calling resetPassword\n    }\n  } //end forgotPasswordFunction\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-wrapper\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"box\\\">\\n    <mat-card-header>\\n      <mat-card-title>Log in</mat-card-title>\\n    </mat-card-header>\\n\\n    <form id=\\\"loginForm\\\" #loginForm=\\\"ngForm\\\" class=\\\"example-form\\\">\\n      <mat-card-content>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" required />\\n          <mat-error *ngIf=\\\"email.invalid\\\">{{ getErrorMessage() }}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Password</mat-label>\\n          <input\\n            matInput\\n            placeholder=\\\"Password\\\"\\n            name=\\\"password\\\"\\n            type=\\\"password\\\"\\n            minlength=\\\"8\\\"\\n            #pwd=\\\"ngModel\\\"\\n            (keydown)=\\\"loginKeyDown($event)\\\"\\n            [(ngModel)]=\\\"password\\\"\\n          />\\n          <mat-hint>Min 8 characters</mat-hint>\\n          <mat-error *ngIf=\\\"pwd.errors?.required\\\"\\n            >You must enter a value</mat-error\\n          >\\n          <mat-error *ngIf=\\\"pwd.errors?.minlength\\\"\\n            >You must enter atleast 8 characters</mat-error\\n          >\\n        </mat-form-field>\\n      </mat-card-content>\\n      <button\\n        mat-stroked-button\\n        color=\\\"accent\\\"\\n        (click)=\\\"signInFunction()\\\"\\n        [disabled]=\\\"!loginForm.valid\\\"\\n        class=\\\"btn-block\\\"\\n      >Log In</button>\\n\\n      <button\\n      mat-stroked-button\\n      color=\\\"accent\\\"\\n      (click)=\\\"loginGeust()\\\"\\n      [disabled]=\\\"!loginForm.valid\\\"\\n      class=\\\"btn-block\\\"\\n    >\\n      Continue as Geust</button\\n    >\\n      \\n      \\n      <br />\\n      <a\\n      class=\\\"text-center\\\"\\n      mat-raised-link\\n      [routerLink]=\\\"['/user/signup']\\\"\\n      style=\\\"text-decoration: none;display: block;\\\"\\n      >Sign Up</a>\\n      <a\\n      class=\\\"text-center\\\"\\n        mat-raised-link\\n        [routerLink]=\\\"['/user/forgot-password']\\\"\\n        style=\\\"text-decoration: none;display: block;\\\"\\n        >Forgot Password?</a\\n\\n      >\\n    </form>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit, Input, Output } from \"@angular/core\";\nimport { FormControl, Validators, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { EventEmitter } from \"events\";\nimport { AppService } from \"./../../app.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { HttpXsrfCookieExtractor } from \"@angular/common/http/src/xsrf\";\nimport * as io from \"socket.io-client\";\n\nimport { Cookie } from \"ng2-cookies/ng2-cookies\";\nimport { SocketService } from \"./../../socket.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  email = new FormControl(\"\", [Validators.required, Validators.email]);\n  public baseUrl = \"http://127.0.0.1:3000\";\n\n  public friendsTopic: any[] = [];\n  password: any;\n  socket;\n  public userId: string;\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService,\n    public socketService: SocketService\n  ) {\n    this.socket = io(this.baseUrl);\n  }\n\n  ngOnInit() {\n    this.userId = Cookie.get(\"userId\");\n    this.socket.on(\"online-user-topic\", topic => {\n     \n    });\n  }\n\n  getErrorMessage() {\n    this.email.hasError(\"required\")\n      ? \"You must enter a value\"\n      : this.email.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n\n  public signInFunction(name?:any): any {\n\n    if (!this.email.value) {\n      this.toastr.warning(\"Email is Required\", \"required\");\n    } else if (this.email.hasError(\"email\")) {\n      this.toastr.warning(\"Not a valid email\", \"warning!\");\n    } else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"warning!\");\n    } else {\n      let data = {\n        email: this.email.value,\n        password: this.password\n      };\n\n      this.appService.signIn(data).subscribe(\n        apiResponse => {\n          console.log(apiResponse,'before');\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Login Successful\", \"Welcome to Discussion\");\n\n\n            console.log(apiResponse,'after');\n\n\n            Cookie.set(\"authToken\", apiResponse.data.authToken);\n            Cookie.set(\"userId\", apiResponse.data.userDetails.userId);\n            Cookie.set(\n              \"userName\",\n              `${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}`\n            );\n            this.appService.setUserInfoInLocalStorage(\n              apiResponse.data.userDetails\n            );\n\n            setTimeout(() => {\n              this.router.navigate([\"/discussion/discussion-view\"]);\n            }, 1000);\n      \n          } else {\n            this.toastr.warning(apiResponse.message, \"Error!\");\n          }\n        },\n        error => {\n          if (error.status == 404) {\n            this.toastr.warning(\n              \"Login Failed\",\n              \"User not Found or Email is not verified\"\n            );\n          } else if (error.status == 400) {\n            this.toastr.warning(\"Login Failed\", \"Wrong password\");\n          } else {\n            this.toastr.error(\"Some Error occured\", \"Error!\");\n            this.router.navigate([\"/serverError\"]);\n          }\n        }\n      );\n    }\n  }\n\n\n  public loginGeust(){\n\n    let data = {\n      email: 'test@gmail.com',\n      password: '123456789'\n    };\n\n    this.appService.signIn(data).subscribe(\n      apiResponse => {\n        console.log(apiResponse,'before');\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Login Successful\", \"Welcome to Discussion\");\n\n\n          console.log(apiResponse,'after');\n\n\n          Cookie.set(\"authToken\", apiResponse.data.authToken);\n          Cookie.set(\"userId\", apiResponse.data.userDetails.userId);\n          Cookie.set(\n            \"userName\",\n            `${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}`\n          );\n          this.appService.setUserInfoInLocalStorage(\n            apiResponse.data.userDetails\n          );\n\n          setTimeout(() => {\n            this.router.navigate([\"/discussion/discussion-view\"]);\n          }, 1000);\n    \n        } else {\n          this.toastr.warning(apiResponse.message, \"Error!\");\n        }\n      },\n      error => {\n        if (error.status == 404) {\n          this.toastr.warning(\n            \"Login Failed\",\n            \"User not Found or Email is not verified\"\n          );\n        } else if (error.status == 400) {\n          this.toastr.warning(\"Login Failed\", \"Wrong password\");\n        } else {\n          this.toastr.error(\"Some Error occured\", \"Error!\");\n          this.router.navigate([\"/serverError\"]);\n        }\n      }\n    );\n\n\n  }\n\n  loginKeyDown($event) {\n    if ($event.keyCode == 13) {\n      this.signInFunction();\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"login-wrapper\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"box\\\">\\n    <form\\n      id=\\\"ResetPasswordForm\\\"\\n      #resetPasswordForm=\\\"ngForm\\\"\\n      class=\\\"example-form\\\"\\n    >\\n      <mat-card-content>\\n        <h4>Reset Password</h4>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <mat-label>Password</mat-label>\\n          <input\\n            matInput\\n            type=\\\"password\\\"\\n            placeholder=\\\"Enter your Password\\\"\\n            minlength=\\\"8\\\"\\n            #pwd=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"password\\\"\\n            name=\\\"password\\\"\\n            required\\n          />\\n          <mat-hint>* Min 8 Characters</mat-hint>\\n          <mat-error *ngIf=\\\"pwd.errors?.required\\\"\\n            >You must enter a value</mat-error\\n          >\\n          <mat-error *ngIf=\\\"pwd.errors?.minlength\\\"\\n            >You must enter atleast 8 Chars</mat-error\\n          >\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input\\n            matInput\\n            type=\\\"password\\\"\\n            placeholder=\\\"Re-enter your Password\\\"\\n            minlength=\\\"8\\\"\\n            #conpwd=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"confirmPassword\\\"\\n            name=\\\"confirmPassword\\\"\\n            required\\n          />\\n          <mat-hint>* Min 8 Characters</mat-hint>\\n          <mat-error *ngIf=\\\"conpwd.errors?.required\\\"\\n            >You must enter a value</mat-error\\n          >\\n          <mat-error *ngIf=\\\"conpwd.errors?.minlength\\\"\\n            >You must enter atleast 8 Chars</mat-error\\n          >\\n        </mat-form-field>\\n      </mat-card-content>\\n      <button\\n        mat-stroked-button\\n        color=\\\"accent\\\"\\n        (click)=\\\"updatePasswordFunction()\\\"\\n        class=\\\"btn-block\\\"\\n      >\\n        Save</button\\n      ><br />\\n    </form>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AppService } from \"src/app/app.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\",\n  styleUrls: [\"./reset-password.component.css\"]\n})\nexport class ResetPasswordComponent implements OnInit {\n  public validationToken: any;\n  public password: any;\n  public confirmPassword: any;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit() {\n    this.validationToken = this._route.snapshot.paramMap.get(\"validationToken\");\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate([\"/user/login\"]);\n  } //end of goToSign function\n\n  public updatePasswordFunction(): any {\n    if (this.password != this.confirmPassword) {\n      this.toastr.warning(\"Password doesn't match\", \"Warning!\");\n    } else {\n      let data = {\n        validationToken: this.validationToken,\n        password: this.password\n      };\n\n      this.appService.updatePassword(data).subscribe(\n        apiResponse => {\n          if (apiResponse.status == 200) {\n            this.toastr.success(\"Please login\", \"Password Updated!\");\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 1000); //redirecting to signIn page\n          } else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n        error => {\n          if (error.status == 404) {\n            this.toastr.warning(\n              \"Password Update failed\",\n              \"Please request another password reset!\"\n            );\n          } else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n            this.router.navigate([\"/serverError\"]);\n          }\n        }\n      ); //end calling updatePassword\n    }\n  } //end updatePasswordFunction\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"login-wrapper\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"box-signup\\\">\\n    <mat-card-header>\\n      <mat-card-title>Register</mat-card-title>\\n    </mat-card-header>\\n\\n    <form id=\\\"signupform\\\" class=\\\"example-form\\\" #signupForm=\\\"ngForm\\\">\\n      <mat-card-content>\\n        <mat-form-field class=\\\"col-6\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"FirstName\\\"\\n            minlength=\\\"3\\\"\\n            #fstName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"firstName\\\"\\n            name=\\\"firstName\\\"\\n            required\\n          />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-6\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"LastName\\\"\\n            minlength=\\\"3\\\"\\n            #lstName=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"lastName\\\"\\n            name=\\\"lastName\\\"\\n            required\\n          />\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-6\\\">\\n          <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"email\\\" required />\\n          <mat-error *ngIf=\\\"email.invalid\\\">{{ getErrorMessage() }}</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-6\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Password\\\"\\n            type=\\\"password\\\"\\n            minlength=\\\"8\\\"\\n            #pwd=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"password\\\"\\n            name=\\\"password\\\"\\n            required\\n          />\\n\\n          <mat-error *ngIf=\\\"pwd.errors?.required\\\"\\n            >You must enter a value</mat-error\\n          >\\n          <mat-error *ngIf=\\\"pwd.errors?.minlength\\\"\\n            >You must enter atleast 8 Chars</mat-error\\n          >\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-6\\\">\\n          <mat-select\\n            placeholder=\\\"Select Country Name\\\"\\n            [(value)]=\\\"country\\\"\\n            (selectionChange)=\\\"onCountryChange()\\\"\\n          >\\n            <mat-option\\n              *ngFor=\\\"let country of countries\\\"\\n              [value]=\\\"country.code\\\"\\n            >\\n              {{ country.name }}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-6\\\">\\n          <input\\n            matInput\\n            placeholder=\\\"Mobile Number\\\"\\n            type=\\\"number\\\"\\n            [(ngModel)]=\\\"mobileNumber\\\"\\n            name=\\\"mobileNumber\\\"\\n            pattern=\\\"^\\\\d{10}$\\\"\\n            maxlength=\\\"10\\\"\\n            #mobNumber=\\\"ngModel\\\"\\n            required\\n          />\\n\\n          <span matPrefix>+{{ countryCode }} &nbsp;</span>\\n\\n          <mat-hint>* Max 10 Digits</mat-hint>\\n          <mat-error *ngIf=\\\"mobNumber.errors?.required\\\"\\n            >You must enter a value</mat-error\\n          >\\n          <mat-error *ngIf=\\\"mobNumber.errors?.pattern\\\"\\n            >Only 10 Digits</mat-error\\n          >\\n        </mat-form-field>\\n      </mat-card-content>\\n\\n      <button\\n        mat-stroked-button\\n        (click)=\\\"signupFunction()\\\"\\n        [disabled]=\\\"!signupForm.valid\\\"\\n        color=\\\"accent\\\"\\n        class=\\\"btn-block\\\"\\n      >\\n        Register\\n      </button>\\n      <button mat-stroked-button color=\\\"accent\\\" class=\\\"btn-block\\\">\\n        Sign In\\n      </button>\\n      <a\\n      class=\\\"text-center mt-2\\\"\\n      mat-raised-link\\n      [routerLink]=\\\"['/user/login']\\\"\\n      style=\\\"text-decoration: none;display: block;\\\"\\n      >Log In</a>\\n    </form>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AppService } from \"../../app.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignUpComponent implements OnInit {\n  Roles: any = [\"Admin\", \"Author\", \"Reader\"];\n  email = new FormControl(\"\", [Validators.required, Validators.email]);\n  public countries: any[] = [];\n  public countryCodes: string[];\n  public allCountries: any;\n  public mobileNumber: any;\n  public countryCode: string;\n  public countryName: string;\n  public country: any;\n  public firstName: any;\n  public lastName: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit() {\n    this.getCountries();\n    this.getCountryCodes();\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate([\"/user/login\"]);\n  } \n\n  public getCountries() {\n    this.appService.getCountryNames().subscribe(data => {\n      this.allCountries = data;\n      for (let i in data) {\n        let singleCountry = {\n          name: data[i],\n          code: i\n        };\n        this.countries.push(singleCountry);\n      }\n      this.countries = this.countries.sort((first, second) => {\n        return first.name.toUpperCase() < second.name.toUpperCase()\n          ? -1\n          : first.name.toUpperCase() > second.name.toUpperCase()\n          ? 1\n          : 0;\n      }); \n    }); \n  } \n\n  public getCountryCodes() {\n    this.appService.getCountryNumbers().subscribe(data => {\n      this.countryCodes = data;\n    }); \n  } \n\n  onCountryChange() {\n    this.countryCode = this.countryCodes[this.country];\n    this.countryName = this.country;\n  }\n\n  getErrorMessage() {\n    return this.email.hasError(\"required\")\n      ? \"You must enter a value\"\n      : this.email.hasError(\"email\")\n      ? \"Not a valid email\"\n      : \"\";\n  }\n\n  public signupFunction(): any {\n    if (!this.firstName) {\n      this.toastr.warning(\"First Name is required\", \"Warning!\");\n    } else if (!this.lastName) {\n      this.toastr.warning(\"Last Name is required\", \"Warning!\");\n    } else if (!this.mobileNumber) {\n      this.toastr.warning(\"Mobile Number is required\", \"Warning!\");\n    } else if (!this.country) {\n      this.toastr.warning(\"Country is required\", \"Warning!\");\n    } else if (!this.email.value) {\n      this.toastr.warning(\"Email is required\", \"Warning!\");\n    } else if (!this.password) {\n      this.toastr.warning(\"Password is required\", \"Warning!\");\n    } else if (this.email.hasError(\"email\")) {\n      this.toastr.warning(\"Not a valid email\", \"Warning!\");\n    } else {\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobileNumber: `${this.countryCode} ${this.mobileNumber}`,\n        email: this.email.value,\n        password: this.password,\n        countryName: this.countryName\n      };\n      this.appService.signUp(data).subscribe(\n        apiResponse => {\n        \n          if (apiResponse.status == 200) {\n            this.toastr.success(\n              \"Please check your email\",\n              \"Registered with Discussion\"\n            );\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 1000); //redirecting to signIn page\n          } else {\n            this.toastr.error(apiResponse.message, \"Error!\");\n          }\n        },\n        error => {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          this.router.navigate([\"/serverError\"]);\n        }\n      ); //end calling signUpFunction\n    }\n  } //end signUp function\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignUpComponent } from \"./signup/signup.component\";\n// import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from \"./verify-email/verify-email.component\";\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent, runGuardsAndResolvers: \"always\" },\n  { path: \"signup\", component: SignUpComponent },\n  { path: \"forgot-password\", component: ForgotPasswordComponent },\n  { path: \"verify-email/:userId\", component: VerifyEmailComponent },\n  { path: \"reset-password/:validationToken\", component: ResetPasswordComponent }\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n\n  declarations: []\n})\nexport class UserRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { SignUpComponent } from \"./signup/signup.component\";\nimport { VerifyEmailComponent } from \"./verify-email/verify-email.component\";\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport {\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatTooltipModule,\n  MatCardModule\n} from \"@angular/material\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { UserRoutingModule } from \"./user-routing.module\";\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    VerifyEmailComponent,\n    ResetPasswordComponent,\n    ForgotPasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    RouterModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    FlexLayoutModule,\n    FormsModule\n  ],\n  exports: [LoginComponent]\n})\nexport class UserModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdmVyaWZ5LWVtYWlsL3ZlcmlmeS1lbWFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"login-wrapper\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n  <mat-card class=\\\"box\\\">\\n    <mat-card-header>\\n      <mat-card-title>Email Verification Status</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <h1>Welcome to Discussion</h1>\\n      <div>\\n        <h5 style=\\\"color:red\\\">{{ message }}</h5>\\n      </div>\\n\\n      <a class=\\\"nav-link btn-block\\\" [routerLink]=\\\"['/user/login']\\\">Login </a>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ToastrService } from \"ngx-toastr\";\nimport { AppService } from \"../../app.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"./verify-email.component.html\",\n  styleUrls: [\"./verify-email.component.css\"]\n})\nexport class VerifyEmailComponent implements OnInit {\n  public userId: string;\n  public message: string;\n\n  constructor(\n    public appService: AppService,\n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit() {\n    this.userId = this._route.snapshot.paramMap.get(\"userId\");\n    this.verifyEmailFunction();\n  }\n\n  public verifyEmailFunction(): any {\n    this.appService.verifyEmail(this.userId).subscribe(\n      apiResponse => {\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Please login\", \"Email Verified!\");\n          this.message = \"Your account has been activated. You can login now\";\n        } else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n      error => {\n        if (error.status == 404) {\n          this.toastr.warning(\"Email Verification failed\", \"User Not Found!\");\n          this.message = \"Email Verification failed\";\n        } else {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          this.router.navigate([\"/serverError\"]);\n        }\n      }\n    ); //end calling verifyEmail\n  } //end verifyEmailFunction\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The topic of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}